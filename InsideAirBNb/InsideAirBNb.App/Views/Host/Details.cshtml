@model Host

@{ 
    ViewData["Title"] = string.Format("Host {0} Details", Model.Id);

    var listings = from l in Model.Listings
                   group l by l.RoomType.Name into g
                   select new { Name = g.Key, Count = g.Count(), Color = g.Select(x => x.RoomType.Color).First() };
}

<div class="container" style="margin-top: 80px; margin-bottom: 20px;">
    <h1 class="text-airbnb">@Model.Name</h1>
    <hr />
    <div class="row">
        <div class="col-sm-12 col-md-5 col-lg-4">
            @if (Model.HasProfilePic.Equals("t"))
            {
                <img src="@Model.PictureUrl" alt="Profile picture @Model.Name" style="width: 100%;" /><br /><hr /><br />
            }
            <a class="btn btn-primary" style="display: block; width: 100%; text-align: center!important;" href="@Model.Url" target="_blank">View on AirBNB</a>
            <br />
            <hr />
            <h4>@Html.DisplayNameFor(x => x.Verifications)</h4>
            <ul>
                @foreach (var x in Model.Verifications.Replace("[", "").Replace("]", "").Replace("'", "").Split(", "))
                {
                    <li>@x</li>
                }
            </ul>
        </div>
        <div class="col-sm-12 col-md-7 col-lg-8">
            <h4>@Html.DisplayNameFor(x => x.About)</h4>
            <p>@Html.Raw(Model.About)</p>
            <br /><hr /><br />
            <h4>Listings (@Model.Listings.Count())</h4>
            <canvas id="ListingsChart"></canvas>
        </div>
    </div>
</div>

<script>
    var NrListingTypesChart = new Chart(document.getElementById("ListingsChart"), {
        type: 'horizontalBar',
        data: {
            labels: @Json.Serialize(listings.Select(x => x.Name).ToArray()),
            datasets: [{
                data: @Json.Serialize(listings.Select(x => x.Count).ToArray()),
                backgroundColor: @Json.Serialize(listings.Select(x => x.Color).ToArray()),
                label: 'Nr of listings'
            }]
        },
        options: {
            scales: {
                xAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            },
            legend: {
                display: false
            }
        }
    });
</script>

@section PageSpecificHeaderItems{
    <link href='https://api.mapbox.com/mapbox-gl-js/v0.44.2/mapbox-gl.css' rel='stylesheet' />
    <script src='https://api.mapbox.com/mapbox-gl-js/v0.44.2/mapbox-gl.js'></script>
    <script src="/lib/chartjs/Chart.js"></script>
}